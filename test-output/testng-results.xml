<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" total="10" passed="8">
  <reporter-output>
  </reporter-output>
  <suite name="My Sample Suite" duration-ms="77" started-at="2016-06-18T16:34:09Z" finished-at="2016-06-18T16:34:09Z">
    <groups>
    </groups>
    <test name="Gmail" duration-ms="13" started-at="2016-06-18T16:34:09Z" finished-at="2016-06-18T16:34:09Z">
      <class name="Test1.GmailTest">
        <test-method status="PASS" signature="OpenConnection()[pri:0, instance:Test1.GmailTest@1eacdc4]" name="OpenConnection" is-config="true" duration-ms="0" started-at="2016-06-18T22:04:09Z" finished-at="2016-06-18T22:04:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenConnection -->
        <test-method status="PASS" signature="OpenBrowser()[pri:0, instance:Test1.GmailTest@1eacdc4]" name="OpenBrowser" is-config="true" duration-ms="0" started-at="2016-06-18T22:04:09Z" finished-at="2016-06-18T22:04:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenBrowser -->
        <test-method status="PASS" signature="GmailLogin(java.lang.String, java.lang.String)[pri:0, instance:Test1.GmailTest@1eacdc4]" name="GmailLogin" duration-ms="1" started-at="2016-06-18T22:04:09Z" data-provider="GmailData" finished-at="2016-06-18T22:04:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Guser1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Gpass1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GmailLogin -->
        <test-method status="PASS" signature="GmailLogin(java.lang.String, java.lang.String)[pri:0, instance:Test1.GmailTest@1eacdc4]" name="GmailLogin" duration-ms="0" started-at="2016-06-18T22:04:09Z" data-provider="GmailData" finished-at="2016-06-18T22:04:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Guser2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Gpass2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GmailLogin -->
        <test-method status="PASS" signature="CloseBrowser()[pri:0, instance:Test1.GmailTest@1eacdc4]" name="CloseBrowser" is-config="true" duration-ms="0" started-at="2016-06-18T22:04:09Z" finished-at="2016-06-18T22:04:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseBrowser -->
        <test-method status="PASS" signature="OpenBrowser()[pri:0, instance:Test1.GmailTest@1eacdc4]" name="OpenBrowser" is-config="true" duration-ms="0" started-at="2016-06-18T22:04:09Z" finished-at="2016-06-18T22:04:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenBrowser -->
        <test-method status="PASS" signature="CloseBrowser()[pri:0, instance:Test1.GmailTest@1eacdc4]" name="CloseBrowser" is-config="true" duration-ms="0" started-at="2016-06-18T22:04:09Z" finished-at="2016-06-18T22:04:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseBrowser -->
        <test-method status="PASS" signature="OpenBrowser()[pri:0, instance:Test1.GmailTest@1eacdc4]" name="OpenBrowser" is-config="true" duration-ms="0" started-at="2016-06-18T22:04:09Z" finished-at="2016-06-18T22:04:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenBrowser -->
        <test-method status="SKIP" signature="testRecieveMail()[pri:0, instance:Test1.GmailTest@1eacdc4]" name="testRecieveMail" duration-ms="0" started-at="2016-06-18T22:04:09Z" finished-at="2016-06-18T22:04:09Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping testcase]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping testcase
	at Test1.GmailTest.testRecieveMail(GmailTest.java:45)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:773)
	at org.testng.TestRunner.run(TestRunner.java:623)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1110)
	at org.testng.TestNG.run(TestNG.java:1018)
	at org.testng.TestNG.privateMain(TestNG.java:1325)
	at org.testng.TestNG.main(TestNG.java:1294)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecieveMail -->
        <test-method status="PASS" signature="OpenBrowser()[pri:0, instance:Test1.GmailTest@1eacdc4]" name="OpenBrowser" is-config="true" duration-ms="0" started-at="2016-06-18T22:04:09Z" finished-at="2016-06-18T22:04:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenBrowser -->
        <test-method status="PASS" signature="CloseBrowser()[pri:0, instance:Test1.GmailTest@1eacdc4]" name="CloseBrowser" is-config="true" duration-ms="0" started-at="2016-06-18T22:04:09Z" finished-at="2016-06-18T22:04:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseBrowser -->
        <test-method status="PASS" signature="testSendingMail()[pri:0, instance:Test1.GmailTest@1eacdc4]" name="testSendingMail" duration-ms="1" started-at="2016-06-18T22:04:09Z" finished-at="2016-06-18T22:04:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSendingMail -->
        <test-method status="PASS" signature="CloseBrowser()[pri:0, instance:Test1.GmailTest@1eacdc4]" name="CloseBrowser" is-config="true" duration-ms="0" started-at="2016-06-18T22:04:09Z" finished-at="2016-06-18T22:04:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseBrowser -->
        <test-method status="PASS" signature="OpenBrowser()[pri:0, instance:Test1.GmailTest@1eacdc4]" name="OpenBrowser" is-config="true" duration-ms="0" started-at="2016-06-18T22:04:09Z" finished-at="2016-06-18T22:04:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenBrowser -->
        <test-method status="PASS" signature="GmailLogout()[pri:0, instance:Test1.GmailTest@1eacdc4]" name="GmailLogout" duration-ms="0" started-at="2016-06-18T22:04:09Z" finished-at="2016-06-18T22:04:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GmailLogout -->
        <test-method status="PASS" signature="CloseBrowser()[pri:0, instance:Test1.GmailTest@1eacdc4]" name="CloseBrowser" is-config="true" duration-ms="0" started-at="2016-06-18T22:04:09Z" finished-at="2016-06-18T22:04:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseBrowser -->
        <test-method status="PASS" signature="CloseConnection()[pri:0, instance:Test1.GmailTest@1eacdc4]" name="CloseConnection" is-config="true" duration-ms="0" started-at="2016-06-18T22:04:09Z" finished-at="2016-06-18T22:04:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseConnection -->
      </class> <!-- Test1.GmailTest -->
    </test> <!-- Gmail -->
    <test name="Yahoo" duration-ms="5" started-at="2016-06-18T16:34:09Z" finished-at="2016-06-18T16:34:09Z">
      <class name="Test1.GmailTest">
        <test-method status="PASS" signature="InitializeSelenium()[pri:0, instance:Test1.GmailTest@1eacdc4]" name="InitializeSelenium" is-config="true" duration-ms="8" started-at="2016-06-18T22:04:09Z" finished-at="2016-06-18T22:04:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InitializeSelenium -->
        <test-method status="PASS" signature="CloseSelenium()[pri:0, instance:Test1.GmailTest@1eacdc4]" name="CloseSelenium" is-config="true" duration-ms="0" started-at="2016-06-18T22:04:09Z" finished-at="2016-06-18T22:04:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseSelenium -->
      </class> <!-- Test1.GmailTest -->
      <class name="Test1.YahooTest">
        <test-method status="PASS" signature="YahooLogin(java.lang.String, java.lang.String)[pri:0, instance:Test1.YahooTest@708aff]" name="YahooLogin" duration-ms="0" started-at="2016-06-18T22:04:09Z" data-provider="YahooData" finished-at="2016-06-18T22:04:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Yuser2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ypass2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- YahooLogin -->
        <test-method status="PASS" signature="testRecieveMail()[pri:0, instance:Test1.YahooTest@708aff]" name="testRecieveMail" duration-ms="1" started-at="2016-06-18T22:04:09Z" finished-at="2016-06-18T22:04:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecieveMail -->
        <test-method status="PASS" signature="YahooLogin(java.lang.String, java.lang.String)[pri:0, instance:Test1.YahooTest@708aff]" name="YahooLogin" duration-ms="0" started-at="2016-06-18T22:04:09Z" data-provider="YahooData" finished-at="2016-06-18T22:04:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Yuser1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ypass1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- YahooLogin -->
        <test-method status="FAIL" signature="testSendingMail()[pri:0, instance:Test1.YahooTest@708aff]" name="testSendingMail" duration-ms="2" started-at="2016-06-18T22:04:09Z" finished-at="2016-06-18T22:04:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Bad] but found [Good]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Bad] but found [Good]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:178)
	at org.testng.Assert.assertEquals(Assert.java:188)
	at Test1.YahooTest.testSendingMail(YahooTest.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:773)
	at org.testng.TestRunner.run(TestRunner.java:623)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1110)
	at org.testng.TestNG.run(TestNG.java:1018)
	at org.testng.TestNG.privateMain(TestNG.java:1325)
	at org.testng.TestNG.main(TestNG.java:1294)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSendingMail -->
        <test-method status="PASS" signature="YahooLogout()[pri:0, instance:Test1.YahooTest@708aff]" name="YahooLogout" duration-ms="0" started-at="2016-06-18T22:04:09Z" finished-at="2016-06-18T22:04:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- YahooLogout -->
      </class> <!-- Test1.YahooTest -->
    </test> <!-- Yahoo -->
  </suite> <!-- My Sample Suite -->
</testng-results>
